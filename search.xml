<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>远程mysql连接不上</title>
      <link href="/2023/10/30/%E8%BF%9C%E7%A8%8Bmysql%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A/"/>
      <url>/2023/10/30/%E8%BF%9C%E7%A8%8Bmysql%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="用户权限已经是-，但是远程数据库依旧连接不上"><a href="#用户权限已经是-，但是远程数据库依旧连接不上" class="headerlink" title="用户权限已经是%，但是远程数据库依旧连接不上"></a>用户权限已经是%，但是远程数据库依旧连接不上</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>最近趁着双11购买了腾讯云服务器，想着配置好环境，早点用上。</p><p>然后启动我的数据库 开始 狠狠的连接（误）， 结果都是timeout ？ ， 什么我明明已经设置了用户权限是%啊！</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/ImgSummary@master/img/202310301954484.png" alt="image-20231030195447448"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>后来思来想去， 突然想要去看看端口是不是3306， 然后想到中午打开腾讯云的时候，看到了端口？ 我才猛地意识到我的3306端口没有开启</p><blockquote><p>不过这个已经是开启后的了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/ImgSummary@master/img/202310301951278.png" alt="image-20231030195131182"></p><h3 id="开启端口方式"><a href="#开启端口方式" class="headerlink" title="开启端口方式"></a>开启端口方式</h3><ul><li>点击 添加规则</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/ImgSummary@master/img/202310301952077.png" alt="image-20231030195223035"></p><p>跳出来这个页面， 然后将应用类型的下拉框选择mysql ，就好了</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/ImgSummary@master/img/202310301952193.png" alt="image-20231030195259158"></p>]]></content>
      
      
      <categories>
          
          <category> 前后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨域请求解决-nginx服务器</title>
      <link href="/2023/10/28/%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E8%A7%A3%E5%86%B3-nginx%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/10/28/%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E8%A7%A3%E5%86%B3-nginx%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="跨域请求问题-nginx解决"><a href="#跨域请求问题-nginx解决" class="headerlink" title="跨域请求问题 - nginx解决"></a>跨域请求问题 - nginx解决</h1><ul><li>想象一个场景， 我在用vue3 vite 写前端（或者已经打包后的文件）， 同时后端用springboot ， 我写完一个功能想要调试， 但是遇到了下面这个问题</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282236940.png" alt="image-20231028223647903"></p><p>这就是跨域请求的会出现的问题。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul><li><p>我在网上看到了很多， 在前端配置一些文件， 在后端加上注解或添加一些配置类文件， 但是恰巧我的程序使用了上面种种方法都无法成功， 在舍友的提醒下， 我开始使用nginx</p></li><li><p>打开nginx 文件夹 打开conf</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282239386.png" alt="image-20231028223957355"></p><ul><li>使用 vscode 打开 这个nginx.conf(最好不要使用文本编辑器)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282240185.png" alt="image-20231028224030156"></p><ul><li>加上 这段代码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282241195.png" alt="image-20231028224109169"></p><p>我解释一下它的作用， 首先 nginx 有一个监听的端口， 这里就是180，（<strong>所以我们后续调试打开的地址就是180）</strong></p><p>然后 location &#x2F;api 就是你的路径以 api 开头的网址， 被转发到</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282242519.png" alt="image-20231028224242497"></p><p>同理 &#x2F;friend 就被转发到</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282243562.png" alt="image-20231028224303540"></p><p>其余的都被转发到 5173 端口。</p><blockquote><p>在这里 8080 端口是你后端程序的端口， 而5173可以换成你前端程序的端口</p></blockquote><p>而 &#x2F;api 和 &#x2F; friend 就是 我的前端的请求接口 一个是以api 开头一个是 friend开头 。</p><p>哦 对了， 我们还需要将前端的请求地址换成180端口</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282246671.png" alt="image-20231028224611652"></p><p> 这里根据你的nginx 监听的端口而定</p><p>然后打开localhost:180， 发现启动成功</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282247683.png" alt="image-20231028224751393"></p>]]></content>
      
      
      <categories>
          
          <category> 前后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难解惑 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java实现文件上传和文件下载</title>
      <link href="/2023/10/28/java%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2023/10/28/java%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="写课设记录"><a href="#写课设记录" class="headerlink" title="写课设记录"></a>写课设记录</h1><ul><li></li></ul><h1 id="聊天系统课设难题"><a href="#聊天系统课设难题" class="headerlink" title="聊天系统课设难题"></a>聊天系统课设难题</h1><h2 id="文件上传-base64"><a href="#文件上传-base64" class="headerlink" title="文件上传-base64"></a>文件上传-base64</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">String</span> <span class="variable">basepath</span> <span class="operator">=</span><span class="string">&quot;D:\\fileandpicture\\&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line"><span class="comment">// 现在这个message的msg里面存储了一个base64的数据，它是用来存储文件的</span></span><br><span class="line"><span class="keyword">public</span> R&lt;String&gt; <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestBody</span> Message message)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"> <span class="comment">//获取它的文件名称</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">curpath</span> <span class="operator">=</span> basepath + message.getFileName();</span><br><span class="line">    <span class="comment">//获取它的base64实际的内容， base64逗号之前的是文件的格式,后面才是真正的内容</span></span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(curpath);</span><br><span class="line">    <span class="keyword">if</span>(file.exists()) file.mkdir();</span><br><span class="line">    <span class="type">FileOutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">    <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> message.getMsg();</span><br><span class="line">    String []parts = base64String.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">base64Data</span> <span class="operator">=</span> parts[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 转换为字节数组</span></span><br><span class="line">    <span class="type">byte</span>[] data = Base64.getDecoder().decode(base64Data);</span><br><span class="line">    <span class="comment">// 写入到 本地中（然后存入把它的名字存入到数据库中）</span></span><br><span class="line">    stream.write(data);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> xxx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件下载-点击文件之后可下载"><a href="#文件下载-点击文件之后可下载" class="headerlink" title="文件下载 - 点击文件之后可下载"></a>文件下载 - 点击文件之后可下载</h2><h3 id="后端-java"><a href="#后端-java" class="headerlink" title="后端 - java"></a>后端 - java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/downloadfile&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">downloadFile</span><span class="params">(HttpServletResponse response, HttpServletRequest request, String fileName, String extend)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(basepath + fileName);</span><br><span class="line">    <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">        result.put(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;下载的文件不存在&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    response.reset();</span><br><span class="line">    response.setContentType(extend);</span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.setContentLength((<span class="type">int</span>) file.length());</span><br><span class="line">    <span class="comment">//这个是为了防止中文名称的问题</span></span><br><span class="line">    response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(file.getName(), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">    <span class="type">byte</span>[] readeBytes = FileUtil.readBytes(file);</span><br><span class="line">    <span class="comment">// 写入到request 的 输出流中</span></span><br><span class="line">    <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">    os.write(readeBytes);</span><br><span class="line">    result.put(<span class="string">&quot;success&quot;</span>, <span class="string">&quot;下载成功&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> result.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-vue"><a href="#前端-vue" class="headerlink" title="前端 - vue"></a>前端 - vue</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// api/download 就是 上面后端download的地址</span></span><br><span class="line">axios.<span class="title function_">get</span>(baseUrl + <span class="string">&quot;/api/downloadfile&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">fileName</span>: item.<span class="property">fileName</span>,</span><br><span class="line">        <span class="attr">extend</span>: item.<span class="property">extend</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 注意这里一定要写arraybuffer， 不然可能会出错</span></span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&quot;arraybuffer&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 先转换为 Blob类型</span></span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span><span class="keyword">new</span> <span class="title class_">Blob</span>([res], &#123;<span class="attr">type</span>: item.<span class="property">extend</span>&#125;))</span><br><span class="line"><span class="comment">// 在转换为 File类型</span></span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">blob</span>=&gt;</span> <span class="keyword">new</span> <span class="title class_">File</span>([blob], item.<span class="property">fileName</span>))</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">file</span>=&gt;</span>&#123;</span><br><span class="line">        item.<span class="property">msg</span> = file</span><br><span class="line">        <span class="keyword">let</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">        <span class="keyword">let</span> fileNameTemp = item.<span class="property">fileName</span></span><br><span class="line">        reader.<span class="property">onloadend</span> = <span class="function">(<span class="params">es</span>)=&gt;</span>&#123;</span><br><span class="line">            item.<span class="property">msg</span> = es.<span class="property">target</span>.<span class="property">result</span></span><br><span class="line">            item.<span class="property">fileName</span> = fileNameTemp</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(item.<span class="property">msg</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(item.<span class="property">chatType</span> === <span class="number">1</span>)&#123;</span><br><span class="line">                srcImgList.<span class="property">value</span>.<span class="title function_">push</span>(item.<span class="property">msg</span>)</span><br><span class="line">            &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    reader.<span class="title function_">readAsDataURL</span>(file)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="断点续传"><a href="#断点续传" class="headerlink" title="断点续传"></a>断点续传</h2><p>正在编写 。。。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难解惑 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picgo和GitHub搭建的问题</title>
      <link href="/2023/10/28/Picgo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2023/10/28/Picgo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="报错403"><a href="#报错403" class="headerlink" title="报错403"></a>报错403</h1><p>将github 作为 图床的时候出现了问题，打开日志文档一看， 报错403， 在网上搜寻无果。</p><p>然后回想起在github 生成token的时候没有点击任何选项</p><p><img src="https://cdn.jsdelivr.net/gh/Alanyaeer/web-component@master/assets/202310282025158.png" alt="image-20231028202525111"></p><p>将这个repo 勾选之后， 发送图片成功</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难解惑 </tag>
            
            <tag> github 图床 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
